/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class hcm_environs_Environs */

#ifndef _Included_hcm_environs_Environs
#define _Included_hcm_environs_Environs
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseNotifyDebugMessage
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseNotifyDebugMessage
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseNotifyDebugMessage
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseNotifyDebugMessage
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseLogFile
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseLogFile
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseLogFile
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseLogFile
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetVersionString
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionMajor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetVersionMajor
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionMinor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetVersionMinor
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionRevision
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetVersionRevision
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceID
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceID
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceID1
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDeviceID1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseExtendedtouch
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseExtendedtouch
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceIDFromMediator
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceIDFromMediator
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetIPAddress
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetIPAddress
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetSubnetMask
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetSubnetMask
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDirectContactStatus
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetDirectContactStatus
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalEnabled
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalEnabled
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalId
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetPortalId
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    HasDeviceUID
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_HasDeviceUID
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetIsReleaseBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetIsReleaseBuild
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceUID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetDeviceUID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceName
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetDeviceName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorUserName1
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetMediatorUserName1
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorUserName1
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetMediatorUserName1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorPassword1
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetMediatorPassword1
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseAuthentication
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseAuthentication
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetAppStatus
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetAppStatus
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseTouchRecognizer1
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseTouchRecognizer1
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    AllocPlatform
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_AllocPlatform
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    RegisterAtMediators
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_RegisterAtMediators
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    ResetIdentKeys
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_ResetIdentKeys
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetRenderSurface1
 * Signature: (ILandroid/view/Surface;II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetRenderSurface1
  (JNIEnv *, jclass, jint, jobject, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReleaseRenderSurface1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_ReleaseRenderSurface1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    RequestPortalIntraFrame
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_RequestPortalIntraFrame
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    IsNativeAllocated
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_IsNativeAllocated
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    RegisterMainThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_RegisterMainThread
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    InitStorage
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_InitStorage
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    InitWorkDir
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_InitWorkDir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetNetworkStatus
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetNetworkStatus
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    Init1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_Init1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    Start1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_Start1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorFilterLevel
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetMediatorFilterLevel
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorFilterLevel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetMediatorFilterLevel
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetRuntimePlatform
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetRuntimePlatform
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    DeviceConnect
 * Signature: (ILjava/lang/String;Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_DeviceConnect
  (JNIEnv *, jclass, jint, jstring, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    DeviceDisconnect1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_DeviceDisconnect1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceConnectStatus
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceConnectStatus
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetConnectedDevicesCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetConnectedDevicesCount
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    Release1
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_Release1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    Stop1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_Stop1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetStatus1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetStatus1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPorts1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetPorts1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetOSLevel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetOSLevel
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDebug
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDebug
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceDims
 * Signature: (IIIIII)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDeviceDims
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetProjectName1
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetProjectName1
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetApplicationName1
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetApplicationName1
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceType
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDeviceType
  (JNIEnv *, jclass, jchar);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPlatform
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPlatform
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceType
 * Signature: ()C
 */
JNIEXPORT jchar JNICALL Java_hcm_environs_Environs_GetDeviceType
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalViewDims
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalViewDims
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetGCM
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetGCM
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForMediator
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForMediator
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForMediator
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForMediator
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForDevices
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForDevices
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForDevices
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForDevices
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForDevicesEnforce
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForDevicesEnforce
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForDevicesEnforce
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForDevicesEnforce
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForAllTraffic
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForAllTraffic
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForAllTraffic
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForAllTraffic
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseStream
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseStream
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseStream
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseStream
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseNativeDecoder1
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseNativeDecoder1
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseNativeDecoder1
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseNativeDecoder1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseHardwareEncoder1
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseHardwareEncoder1
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseHardwareEncoder
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseHardwareEncoder
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseEncoder
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseEncoder
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseDecoder
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseDecoder
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseRenderer
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseRenderer
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCapturer
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseCapturer
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseSensors
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseSensors
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseSensors
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseSensors
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUsePushNotifications
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUsePushNotifications
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUsePushNotifications
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUsePushNotifications
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseDefaultMediator
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseDefaultMediator
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseDefaultMediator
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseDefaultMediator
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCustomMediator
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCustomMediator
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCustomMediator
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCustomMediator
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediator
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetMediator
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorPort
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetMediatorPort
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorIP
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetMediatorIP
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalNativeResolution
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalNativeResolution
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalNativeResolution
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalNativeResolution
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalAutoStart
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalAutoStart
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalAutoStart
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalAutoStart
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalTCP
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalTCP
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalTCP
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalTCP
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalViewDimsAuto
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalViewDimsAuto
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalViewDimsAuto
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalViewDimsAuto
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderBytesToSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderBytesToSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderBytesToType
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderBytesToType
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderBytesToStartValue
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderBytesToStartValue
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendMsg
 * Signature: (ILjava/lang/String;Ljava/lang/String;ILjava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendMsg
  (JNIEnv *, jclass, jint, jstring, jstring, jint, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendBuffer
 * Signature: (IIILjava/lang/String;[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendBuffer
  (JNIEnv *, jclass, jint, jint, jint, jstring, jbyteArray, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendTcpPortal
 * Signature: (IILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendTcpPortal
  (JNIEnv *, jclass, jint, jint, jobject, jint, jobject, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    AcquirePortalSendID
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_AcquirePortalSendID
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReleasePortalSendID
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_ReleasePortalSendID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    AcquirePortalReceiveID
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_AcquirePortalReceiveID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReleasePortalReceiveID
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_ReleasePortalReceiveID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReceivePortalUnit
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_ReceivePortalUnit
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendFile
 * Signature: (IIILjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendFile
  (JNIEnv *, jclass, jint, jint, jint, jstring, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetOrientations
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetOrientations
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetAccelerometers
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetAccelerometers
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUsePlatformPortalGenerator
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUsePlatformPortalGenerator
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    InitRequestPortalStream
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_InitRequestPortalStream
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ProvidePortalStream1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_ProvidePortalStream1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    StartPortalStream1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_StartPortalStream1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    PausePortalStream1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_PausePortalStream1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    StopPortalStream1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_StopPortalStream1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetActivePortalID
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetActivePortalID
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetRequestedPortalID
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetRequestedPortalID
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalInfo
 * Signature: (Ljava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalInfo
  (JNIEnv *, jclass, jobject);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalInfo
 * Signature: (Ljava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetPortalInfo
  (JNIEnv *, jclass, jobject);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendPortalInit
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendPortalInit
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    TouchDispatch
 * Signature: (ILjava/nio/ByteBuffer;IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_TouchDispatch
  (JNIEnv *, jclass, jint, jobject, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetSizeOfInputPack
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetSizeOfInputPack
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    BridgeForNotifier
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_BridgeForNotifier
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevicesCount
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDevicesCount
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevices
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDevices
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevice
 * Signature: (ILjava/lang/String;Ljava/lang/String;I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDevice
  (JNIEnv *, jclass, jint, jstring, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceForPortal1
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDeviceForPortal1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceBestMatch1
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDeviceBestMatch1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceInstanceSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceInstanceSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevicesHeaderSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDevicesHeaderSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFilePath
 * Signature: (ILjava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetFilePath
  (JNIEnv *, jclass, jint, jstring, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFilePathNative
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetFilePathNative
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFile
 * Signature: (ILjava/lang/String;Ljava/lang/String;I[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hcm_environs_Environs_GetFile
  (JNIEnv *, jclass, jint, jstring, jstring, jint, jbyteArray, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFileNative
 * Signature: (II[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hcm_environs_Environs_GetFileNative
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceDisplayProps1
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDeviceDisplayProps1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetNetworkStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetNetworkStatus
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
