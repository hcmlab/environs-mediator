/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class hcm_environs_Environs */

#ifndef _Included_hcm_environs_Environs
#define _Included_hcm_environs_Environs
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     hcm_environs_Environs
 * Method:    CreateEnvirons1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_CreateEnvirons1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    LoadSettings1
 * Signature: (ILjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_LoadSettings1
  (JNIEnv *, jclass, jint, jstring, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseMediatorLoginDialog1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseMediatorLoginDialog1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseMediatorLoginDialog1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseMediatorLoginDialog1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorLoginDialogDismissDisable1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetMediatorLoginDialogDismissDisable1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorLoginDialogDismissDisable1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetMediatorLoginDialogDismissDisable1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseNotifyDebugMessage
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseNotifyDebugMessage
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseNotifyDebugMessage
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseNotifyDebugMessage
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseLogFile1
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseLogFile1
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseLogFile1
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseLogFile1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetVersionString
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionMajor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetVersionMajor
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionMinor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetVersionMinor
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetVersionRevision
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetVersionRevision
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceID
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceID1
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDeviceID1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseExtendedtouch1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseExtendedtouch1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceIDFromMediator1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceIDFromMediator1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetIPAddress
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetIPAddress
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetSubnetMask
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetSubnetMask
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDirectContactStatus1
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetDirectContactStatus1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalEnabled1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalEnabled1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalId1
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetPortalId1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetAppAreaID1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetAppAreaID1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    HasDeviceUID
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_HasDeviceUID
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetIsReleaseBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetIsReleaseBuild
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceUID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetDeviceUID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceName1
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetDeviceName1
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorUserName1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetMediatorUserName1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorUserName1
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetMediatorUserName1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseMediatorAnonymousLogon1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseMediatorAnonymousLogon1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseMediatorAnonymousLogon1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseMediatorAnonymousLogon1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorPassword1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetMediatorPassword1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseAuthentication1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseAuthentication1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetAppStatus1
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetAppStatus1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseTouchRecognizer1
 * Signature: (ILjava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseTouchRecognizer1
  (JNIEnv *, jclass, jint, jstring, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    AllocPlatform
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_AllocPlatform
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    RegisterAtMediators1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_RegisterAtMediators1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ResetIdentKeys
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_ResetIdentKeys
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    PushSensorData
 * Signature: (IIFFF)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_PushSensorData
  (JNIEnv *, jclass, jint, jint, jfloat, jfloat, jfloat);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetSensorEventSender1
 * Signature: (IIIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetSensorEventSender1
  (JNIEnv *, jclass, jint, jint, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetSensorEventSenderCount1
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetSensorEventSenderCount1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    IsNativeAllocated
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_IsNativeAllocated
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    RegisterMainThread
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_RegisterMainThread
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    InitStorage
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_InitStorage
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    InitWorkDir
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_InitWorkDir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetNetworkStatus
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetNetworkStatus
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    Init1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_Init1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    Start1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_Start1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorFilterLevel1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetMediatorFilterLevel1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediatorFilterLevel1
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetMediatorFilterLevel1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPlatform1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetPlatform1
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPlatform1
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPlatform1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    DeviceConnect1
 * Signature: (IILjava/lang/String;Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_DeviceConnect1
  (JNIEnv *, jclass, jint, jint, jstring, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    DeviceDisconnect1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_DeviceDisconnect1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceConnectStatus
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceConnectStatus
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetConnectedDevicesCount1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetConnectedDevicesCount1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    Dispose1
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_Dispose1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    Stop1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_Stop1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetStatus1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetStatus1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPorts1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetPorts1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetOSLevel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetOSLevel
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDebug
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDebug
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceDims1
 * Signature: (IIIIII)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDeviceDims1
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetAreaName1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetAreaName1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetApplicationName1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetApplicationName1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetDeviceType
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetDeviceType
  (JNIEnv *, jclass, jchar);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceType
 * Signature: ()C
 */
JNIEXPORT jchar JNICALL Java_hcm_environs_Environs_GetDeviceType
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalViewDims1
 * Signature: (IIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetPortalViewDims1
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetGCM
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetGCM
  (JNIEnv *, jclass, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForMediator1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForMediator1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForMediator1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForMediator1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForDevices1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForDevices1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForDevices1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForDevices1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForDevicesEnforce1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForDevicesEnforce1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForDevicesEnforce1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForDevicesEnforce1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCLSForAllTraffic1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCLSForAllTraffic1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCLSForAllTraffic1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCLSForAllTraffic1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseStream1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseStream1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseStream1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseStream1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseNativeDecoder1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseNativeDecoder1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseNativeDecoder1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseNativeDecoder1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseHardwareEncoder1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseHardwareEncoder1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseHardwareEncoder1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseHardwareEncoder1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUsePortalDefaultModules1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUsePortalDefaultModules1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseEncoder1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseEncoder1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseDecoder1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseDecoder1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseRenderer1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseRenderer1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCapturer1
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetUseCapturer1
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseSensors1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseSensors1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseSensors1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseSensors1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUsePushNotifications
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUsePushNotifications
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUsePushNotifications
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUsePushNotifications
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseDefaultMediator1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseDefaultMediator1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseDefaultMediator1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseDefaultMediator1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetUseCustomMediator1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetUseCustomMediator1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUseCustomMediator1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUseCustomMediator1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetMediator1
 * Signature: (ILjava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetMediator1
  (JNIEnv *, jclass, jint, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorPort1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetMediatorPort1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetMediatorIP1
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetMediatorIP1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalNativeResolution1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalNativeResolution1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalNativeResolution1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalNativeResolution1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalAutoStart1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalAutoStart1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalAutoStart1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalAutoStart1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalTCP1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalTCP1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalTCP1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalTCP1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalViewDimsAuto1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetPortalViewDimsAuto1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalViewDimsAuto1
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalViewDimsAuto1
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderBytesToSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderBytesToSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderBytesToType
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderBytesToType
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetBufferHeaderBytesToStartValue
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetBufferHeaderBytesToStartValue
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendMessage1
 * Signature: (IILjava/lang/String;Ljava/lang/String;ILjava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendMessage1
  (JNIEnv *, jclass, jint, jint, jstring, jstring, jint, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendBuffer1
 * Signature: (IIIILjava/lang/String;[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendBuffer1
  (JNIEnv *, jclass, jint, jint, jint, jint, jstring, jbyteArray, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendTcpPortal
 * Signature: (IILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendTcpPortal
  (JNIEnv *, jclass, jint, jint, jobject, jint, jobject, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    AcquirePortalSendID
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_AcquirePortalSendID
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReleasePortalSendID
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_ReleasePortalSendID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    AcquirePortalReceiveID
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_AcquirePortalReceiveID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReleasePortalReceiveID
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_ReleasePortalReceiveID
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReceivePortalUnit
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_ReceivePortalUnit
  (JNIEnv *, jclass, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendFile1
 * Signature: (IIIILjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendFile1
  (JNIEnv *, jclass, jint, jint, jint, jint, jstring, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetUsePlatformPortalGenerator1
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_SetUsePlatformPortalGenerator1
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalIDFreeSlot1
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetPortalIDFreeSlot1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    RequestPortalStream1
 * Signature: (IIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_RequestPortalStream1
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ProvidePortalStream1
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_ProvidePortalStream1
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ProvideRequestPortalStream1
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_ProvideRequestPortalStream1
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    StartPortalStream1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_StartPortalStream1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    PausePortalStream1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_PausePortalStream1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    StopPortalStream1
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_StopPortalStream1
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetRenderSurface1
 * Signature: (IILandroid/view/Surface;II)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetRenderSurface1
  (JNIEnv *, jclass, jint, jint, jobject, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    ReleaseRenderSurface1
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_ReleaseRenderSurface1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    RequestPortalIntraFrame
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_RequestPortalIntraFrame
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetRequestedPortalID
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetRequestedPortalID
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetPortalInfo
 * Signature: (ILjava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_GetPortalInfo
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     hcm_environs_Environs
 * Method:    SetPortalInfo
 * Signature: (ILjava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SetPortalInfo
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     hcm_environs_Environs
 * Method:    SendPortalInit1
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_hcm_environs_Environs_SendPortalInit1
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    TouchDispatch
 * Signature: (IILjava/nio/ByteBuffer;IZ)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_TouchDispatch
  (JNIEnv *, jclass, jint, jint, jobject, jint, jboolean);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetSizeOfInputPack
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetSizeOfInputPack
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    BridgeForNotifier
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_hcm_environs_Environs_BridgeForNotifier
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevicesCount1
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDevicesCount1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevices1
 * Signature: (II)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDevices1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevice1
 * Signature: (IILjava/lang/String;Ljava/lang/String;I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDevice1
  (JNIEnv *, jclass, jint, jint, jstring, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceForPortal1
 * Signature: (II)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDeviceForPortal1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceBestMatch1
 * Signature: (II)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDeviceBestMatch1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceInstanceSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDeviceInstanceSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDevicesHeaderSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetDevicesHeaderSize
  (JNIEnv *, jclass);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFilePath
 * Signature: (IILjava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetFilePath
  (JNIEnv *, jclass, jint, jint, jstring, jstring, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFilePathForStorage1
 * Signature: (IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetFilePathForStorage1
  (JNIEnv *, jclass, jint, jint, jstring, jstring);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFilePathNative1
 * Signature: (III)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_hcm_environs_Environs_GetFilePathNative1
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFile
 * Signature: (IILjava/lang/String;Ljava/lang/String;I[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hcm_environs_Environs_GetFile
  (JNIEnv *, jclass, jint, jint, jstring, jstring, jint, jbyteArray, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetFileNative
 * Signature: (III[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hcm_environs_Environs_GetFileNative
  (JNIEnv *, jclass, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetDeviceDisplayProps1
 * Signature: (II)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_hcm_environs_Environs_GetDeviceDisplayProps1
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     hcm_environs_Environs
 * Method:    GetNetworkStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hcm_environs_Environs_GetNetworkStatus
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
